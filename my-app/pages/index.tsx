import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { fetchArticles, fetchCategories } from "../http";
import styles from "../styles/Home.module.css";
import { IArticle, ICategory, ICollectionResponse } from "../types";
import { AxiosResponse } from "axios";
import Tabs from "../components/Tabs";
import ArticleList from "../components/ArticleList";
import qs from "qs";

interface IPropTypes {
  categories: {
    items: ICategory[];
  };
  articles: {
    items: IArticle[];
  };
}

const Home: NextPage<IPropTypes> = ({ categories, articles }) => {
  console.log("categories", categories);
  return (
    <>
      <Head>
        <title>Coder's Blog Homepage</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* Categories */}
      <Tabs categories={categories.items} />

      {/*  ArticleList */}
      <ArticleList articles={articles.items} />
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
  //Fetch Articles
  const option = {
    populate: ["author.avatar"],
    sort: ["id:desc"],
  };
  const queryString = qs.stringify(option);
  // console.log("String", queryString);

  const { data: articles }: AxiosResponse<ICollectionResponse<IArticle[]>> =
    await fetchArticles(queryString);
  console.log(JSON.stringify(articles));

  // Fetch Categories

  const { data: categories }: AxiosResponse<ICollectionResponse<ICategory[]>> =
    await fetchCategories();

  // console.log("categories", categories);
  return {
    props: {
      categories: {
        items: categories.data,
      },
      articles: {
        items: articles.data,
        // pagination: articles.meta.pagintaion,

        // 3:30:19
      },
    },
  };
};

export default Home;

// 4:37:13
